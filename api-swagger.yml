openapi: 3.0.0
info:
  title: Rest API Test Task
  description: Description API
  version: 3.0.0
servers:
  - url: http://localhost:4000/api

paths:
  /files/byId/{id}:
    get:
      summary: Retrieve a file by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The file's ID
      responses:
        '200':
          description: Success response with data
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad request response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: File not found response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /files/all:
    get:
      summary: Retrieve a list of all files
      responses:
        '200':
          description: Success response with an array of file names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad request response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /files:
    post:
      summary: Create a new file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileData'
      responses:
        '200':
          description: File successfully created
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
        '400':
          description: Error creating file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /files/{id}:
    patch:
      summary: Update a file
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The file's ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileData'
      responses:
        '200':
          description: File successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Error updating file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Replace a file
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The file's ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileData'
      responses:
        '200':
          description: File successfully replaced
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Error replacing file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a file
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The file's ID
      responses:
        '200':
          description: File successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Error deleting file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        status:
          type: string
        statusCode:
          type: integer
        message:
          type: string

    FileData:
      type: object
